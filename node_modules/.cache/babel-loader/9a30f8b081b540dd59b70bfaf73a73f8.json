{"remainingRequest":"/Users/yangjiahao/Desktop/code/more/vue-app/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yangjiahao/Desktop/code/more/vue-app/src/http/axios.js","dependencies":[{"path":"/Users/yangjiahao/Desktop/code/more/vue-app/src/http/axios.js","mtime":1578403611595},{"path":"/Users/yangjiahao/Desktop/code/more/vue-app/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangjiahao/Desktop/code/more/vue-app/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7CmltcG9ydCB7IFRvYXN0IH0gZnJvbSAndmFudCc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsgLy8g5YWo5bGA6YWN572uCgpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJ2h0dHA6Ly8xMzQuMTc1LjE1NC45Mzo2Njc3JzsgLy8gQWRkIGEgcmVzcG9uc2UgaW50ZXJjZXB0b3IKCmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy8g5bCG5ZCO5Y+w55qE5Y+C5pWw57uT5p6c6K6+572u5YiwcmVzcG9uc2UKICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgcmVzcG9uc2UuZGF0YSA9IGRhdGEuZGF0YTsKICByZXNwb25zZS5zdGF0dXMgPSBkYXRhLnN0YXR1czsKICByZXNwb25zZS5zdGF0dXNUZXh0ID0gZGF0YS5tZXNzYWdlOyAvLyDnu5/kuIDlvILluLjlpITnkIYKCiAgaWYgKGRhdGEuc3RhdHVzICE9PSAyMDApIHsKICAgIFRvYXN0KGRhdGEubWVzc2FnZSk7CgogICAgaWYgKGRhdGEubWVzc2FnZSA9PT0gInRva2Vu5aSx5pWI77yM6K+36YeN5paw55m75b2VIikgewogICAgICByb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgICB9CgogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGRhdGEubWVzc2FnZSk7CiAgfQoKICByZXR1cm4gcmVzcG9uc2U7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIFRvYXN0KCLnvZHnu5zlvILluLgiKTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKLyoqCiAgZ2V05pa55byP6K+35rGCCiovCgpleHBvcnQgZnVuY3Rpb24gZ2V0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ2dldCcsCiAgICB1cmw6IHVybCwKICAgIHBhcmFtczogcGFyYW1zLAogICAgLy8gZ2V0IOivt+axguaXtuW4pueahOWPguaVsAogICAgdGltZW91dDogMTAwMDAsCiAgICBoZWFkZXJzOiB7CiAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JwogICAgfQogIH0pOwp9Ci8qKgogKiDmj5DkuqRwb3N06K+35rGCIOWPkemAgeeahOaVsOaNruS4uuafpeivouWtl+espuS4su+8jGtleT12YWwma2V5PXZhbAoqLwoKZXhwb3J0IGZ1bmN0aW9uIHBvc3QodXJsLCBkYXRhKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiB1cmwsCiAgICBkYXRhOiBxcy5zdHJpbmdpZnkoZGF0YSksCiAgICB0aW1lb3V0OiAxMDAwMCwKICAgIGhlYWRlcnM6IHsKICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLAogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCcKICAgIH0KICB9KTsKfQovKioKICog5o+Q5LqkcG9zdOivt+axgiAs5p+l6K+i5a2X56ym5Liy77yM5a+56LGh5Lit5bWM5aWX5pWw57uE55qE5qC85byPCiovCgpleHBvcnQgZnVuY3Rpb24gcG9zdF9vYmpfYXJyYXkodXJsLCBkYXRhKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiB1cmwsCiAgICBkYXRhOiBxcy5zdHJpbmdpZnkoZGF0YSwgewogICAgICBhbGxvd0RvdHM6IHRydWUKICAgIH0pLAogICAgdGltZW91dDogMTAwMDAsCiAgICBoZWFkZXJzOiB7CiAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnCiAgICB9CiAgfSk7Cn0KLyoqCiAqIOaPkOS6pHBvc3Tor7fmsYIg5Y+R6YCB55qE5pWw5o2u5Li65p+l6K+i5a2X56ym5Liy77yM5b2T5Y+C5pWw5Li65pWw57uE55qE5pe25YCZ6YCC55So6K+l5pa55rOVCiAqIGlkcz0xJmlkcz0yCiovCgpleHBvcnQgZnVuY3Rpb24gcG9zdF9hcnJheSh1cmwsIGRhdGEpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAicG9zdCIsCiAgICB1cmw6IHVybCwKICAgIGRhdGE6IHFzLnN0cmluZ2lmeShkYXRhLCB7CiAgICAgIGFycmF5Rm9ybWF0OiAicmVwZWF0IgogICAgfSksCiAgICB0aW1lb3V0OiAxMDAwMCwKICAgIGhlYWRlcnM6IHsKICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLAogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCcKICAgIH0KICB9KTsKfQovKioKICog5o+Q5LqkcG9zdOivt+axgiDlj5HpgIHnmoTmlbDmja7kuLpqc29u5a2X56ym5LiyCiovCgpleHBvcnQgZnVuY3Rpb24gcG9zdF9qc29uKHVybCwgZGF0YSkgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICJwb3N0IiwKICAgIHVybDogdXJsLAogICAgZGF0YTogZGF0YSwKICAgIHRpbWVvdXQ6IDEwMDAwCiAgfSk7Cn0="},{"version":3,"sources":["/Users/yangjiahao/Desktop/code/more/vue-app/src/http/axios.js"],"names":["axios","qs","Toast","router","defaults","baseURL","interceptors","response","use","data","status","statusText","message","push","Promise","reject","error","get","url","params","method","timeout","headers","post","stringify","post_obj_array","allowDots","post_array","arrayFormat","post_json"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport qs from 'qs'\nimport {Toast} from 'vant'\nimport router from '../router'\n\n// 全局配置\naxios.defaults.baseURL = 'http://134.175.154.93:6677';\n\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n  // 将后台的参数结果设置到response\n  let {data} = response;\n  response.data = data.data;\n  response.status = data.status;\n  response.statusText = data.message;\n  // 统一异常处理\n  if(data.status !== 200){\n    Toast(data.message);\n    if(data.message === \"token失效，请重新登录\"){\n      router.push(\"/login\")\n    }\n    return Promise.reject(data.message);\n  }\n  return response;\n}, function (error) {\n  Toast(\"网络异常\")\n  return Promise.reject(error);\n});\n\n/**\n  get方式请求\n*/\nexport function get (url, params) {\n  return axios({\n    method: 'get',\n    url,\n    params, // get 请求时带的参数\n    timeout: 10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n/**\n * 提交post请求 发送的数据为查询字符串，key=val&key=val\n*/\nexport function post(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data:qs.stringify(data),\n    timeout:10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 提交post请求 ,查询字符串，对象中嵌套数组的格式\n*/\nexport function post_obj_array(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data:qs.stringify(data,{allowDots:true}),\n    timeout:10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 提交post请求 发送的数据为查询字符串，当参数为数组的时候适用该方法\n * ids=1&ids=2\n*/\nexport function post_array(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data:qs.stringify(data,{arrayFormat:\"repeat\"}),\n    timeout:10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n}\n/**\n * 提交post请求 发送的数据为json字符串\n*/\nexport function post_json(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data,\n    timeout:10000\n  })\n}\n\n"]}]}