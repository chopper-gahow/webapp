{"remainingRequest":"/Users/yangjiahao/Desktop/ygapp/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yangjiahao/Desktop/ygapp/src/store/modules/user.js","dependencies":[{"path":"/Users/yangjiahao/Desktop/ygapp/src/store/modules/user.js","mtime":1578403502322},{"path":"/Users/yangjiahao/Desktop/ygapp/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangjiahao/Desktop/ygapp/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3lhbmdqaWFoYW8vRGVza3RvcC95Z2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IGdldCwgcG9zdF9qc29uLCBwb3N0IH0gZnJvbSAnLi4vLi4vaHR0cC9heGlvcyc7CmltcG9ydCB7IHNldFRva2VuLCBnZXRUb2tlbiwgcmVtb3ZlVG9rZW4gfSBmcm9tICcuLi8uLi91dGlscy9hdXRoJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHRva2VuOiBnZXRUb2tlbigpLAogICAgaW5mbzoge30gLy/nlKjmiLfkv6Hmga8KCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHJlZnJlc2hJbmZvOiBmdW5jdGlvbiByZWZyZXNoSW5mbyhzdGF0ZSwgaW5mbykgewogICAgICBzdGF0ZS5pbmZvID0gaW5mbzsKICAgIH0sCiAgICByZWZyZXNoVG9rZW46IGZ1bmN0aW9uIHJlZnJlc2hUb2tlbihzdGF0ZSwgdG9rZW4pIHsKICAgICAgc3RhdGUudG9rZW4gPSB0b2tlbjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vIOeZu+W9lQogICAgbG9naW46IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dpbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoY29udGV4dCwgcGF5bG9hZCkgewogICAgICAgIHZhciByZXNwb25zZSwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9qc29uKCIvdXNlci9sb2dpbiIsIHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICB0b2tlbiA9IHJlc3BvbnNlLmRhdGEudG9rZW47IC8vIDIu5bCGdG9rZW7nvJPlrZjotbfmnaXvvJ9sb2NhbFN0b3JhZ2UKCiAgICAgICAgICAgICAgICBzZXRUb2tlbih0b2tlbik7IC8vIDMuIOWwhnRva2Vu57u05oqk5Yiw54q25oCB5py65LitCgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hUb2tlbiIsIHRva2VuKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxvZ2luKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX2xvZ2luLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBsb2dpbjsKICAgIH0oKSwKICAgIC8vIOmAmui/h3Rva2Vu6I635Y+WaW5mbwogICAgaW5mbzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2luZm8gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjb250ZXh0LCB0b2tlbikgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2luZm8nKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXQoIi91c2VyL2luZm8iLCB7CiAgICAgICAgICAgICAgICAgIHRva2VuOiB0b2tlbgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoInJlZnJlc2hJbmZvIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdpbmZvLWVuZCcpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBpbmZvKF94MywgX3g0KSB7CiAgICAgICAgcmV0dXJuIF9pbmZvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbmZvOwogICAgfSgpLAogICAgLy8g6YCA5Ye6CiAgICBsb2dvdXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dvdXQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhjb250ZXh0KSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0KCcvdXNlci9sb2dvdXQnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgLy8gMi4g5riF55CG5pys5Zyw57yT5a2YCiAgICAgICAgICAgICAgICByZW1vdmVUb2tlbigpOyAvLyAzLiDmuIXnkIZzdG9yZQoKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdyZWZyZXNoVG9rZW4nLCAnJyk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncmVmcmVzaEluZm8nLCB7fSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxvZ291dChfeDUpIHsKICAgICAgICByZXR1cm4gX2xvZ291dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbG9nb3V0OwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["/Users/yangjiahao/Desktop/ygapp/src/store/modules/user.js"],"names":["get","post_json","post","setToken","getToken","removeToken","namespaced","state","token","info","mutations","refreshInfo","refreshToken","actions","login","context","payload","response","data","commit","console","log","logout"],"mappings":";;AAAA,SAAQA,GAAR,EAAYC,SAAZ,EAAsBC,IAAtB,QAAiC,kBAAjC;AACA,SAAQC,QAAR,EAAiBC,QAAjB,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,eAAe;AACbC,EAAAA,UAAU,EAAC,IADE;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAACJ,QAAQ,EADT;AAELK,IAAAA,IAAI,EAAC,EAFA,CAEG;;AAFH,GAFM;AAMbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGJ,KADH,EACSE,IADT,EACc;AACrBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD,KAHQ;AAITG,IAAAA,YAJS,wBAIIL,KAJJ,EAIUC,KAJV,EAIgB;AACvBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD;AANQ,GANE;AAcbK,EAAAA,OAAO,EAAE;AACP;AACMC,IAAAA,KAFC;AAAA;AAAA;AAAA,+CAEKC,OAFL,EAEaC,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIgBf,SAAS,CAAC,aAAD,EAAee,OAAf,CAJzB;;AAAA;AAIDC,gBAAAA,QAJC;AAKDT,gBAAAA,KALC,GAKOS,QAAQ,CAACC,IAAT,CAAcV,KALrB,EAML;;AACAL,gBAAAA,QAAQ,CAACK,KAAD,CAAR,CAPK,CAQL;;AACAO,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8BX,KAA9B;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWP;AACMC,IAAAA,IAZC;AAAA;AAAA;AAAA,gDAYIM,OAZJ,EAYYP,KAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAaLY,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAbK;AAAA,uBAcgBrB,GAAG,CAAC,YAAD,EAAc;AAACQ,kBAAAA,KAAK,EAALA;AAAD,iBAAd,CAdnB;;AAAA;AAcDS,gBAAAA,QAdC;AAAA;AAAA,uBAgBCF,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6BF,QAAQ,CAACC,IAAtC,CAhBD;;AAAA;AAiBLE,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBP;AACMC,IAAAA,MApBC;AAAA;AAAA;AAAA,gDAoBMP,OApBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBCb,IAAI,CAAC,cAAD,CAtBL;;AAAA;AAuBL;AACAG,gBAAAA,WAAW,GAxBN,CAyBL;;AACAU,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8B,EAA9B;AACAJ,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6B,EAA7B;;AA3BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAdI,CAAf","sourcesContent":["import {get,post_json,post} from '../../http/axios'\nimport {setToken,getToken,removeToken} from '../../utils/auth'\nexport default {\n  namespaced:true,\n  state: {\n    token:getToken(),\n    info:{} //用户信息\n  },\n  mutations: {\n    refreshInfo(state,info){\n      state.info = info;\n    },\n    refreshToken(state,token){\n      state.token = token;\n    }\n  },\n  actions: {\n    // 登录\n    async login(context,payload){\n      // 1.登录\n      let response = await post_json(\"/user/login\",payload);\n      let token = response.data.token;\n      // 2.将token缓存起来？localStorage\n      setToken(token);\n      // 3. 将token维护到状态机中\n      context.commit(\"refreshToken\",token);\n    },\n    // 通过token获取info\n    async info(context,token){\n      console.log('info');\n      let response = await get(\"/user/info\",{token});\n      // 将用户信息设置到info中\n      await context.commit(\"refreshInfo\",response.data)\n      console.log('info-end');\n    },\n    // 退出\n    async logout(context){\n      // 1. 请求后台退出\n      await post('/user/logout');\n      // 2. 清理本地缓存\n      removeToken();\n      // 3. 清理store\n      context.commit('refreshToken','');\n      context.commit('refreshInfo',{});\n    }\n  }\n}"]}]}